import { Telegraf } from "telegraf";
import cron from "node-cron";
import dotenv from "dotenv";

import { messages } from "./messages.js";
import { excuses } from "./excuses.js";
import { images } from "./images.js";
import { stopMsgs } from "./stop.js";

dotenv.config();

const bot = new Telegraf(process.env.BOT_TOKEN);

let task = null;
let currentMessageIndex = 0;
let currentStopIndex = 0;

bot.start((ctx) => ctx.reply('üëã –ü—Ä–∏–≤–µ—Ç! –ú–µ–Ω—è –∑–æ–≤—É—Ç –ë–∞–±–∞—á–µ–Ω–æ–∫, —è —É–∑–Ω–∞–ª —á—Ç–æ —Ç—ã –∏–∑ —Å–µ–º—å–∏ –ë–∞–±–∞–∫–µ–≤–µ—á–µ–π –∏ —Ç—É—Ç –∂–µ –ø–æ—Å—Ç–∞—Ä–∞–ª—Å—è —Ç–µ–±—è –Ω–∞–π—Ç–∏ —á—Ç–æ–± —Å—Ç–∞—Ç—å —Ç–≤–æ–∏ –¥—Ä—É–≥–æ–º. –í –æ—Å–Ω–æ–≤–Ω–æ–º —è —Å–ø–ª—é –∫–∞–∫ –∏ –≤—Å–µ –º—ã –±–∞–±–∞–∫–∏, –Ω–æ —Å —ç—Ç–æ–≥–æ –¥–Ω—è —è —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –±—É–¥—É –ø—Ä–æ—Å—ã–ø–∞—Ç—å—Å—è –∫–∞–∂–¥–æ–µ —É—Ç—Ä–æ —á—Ç–æ–± —Ç–≤–æ–µ —É—Ç—Ä–æ –±—ã–ª–æ –∫–∞–∫ –º–æ–∂–Ω–æ —Ç–µ–ø–ª–µ–µ –∏ —Ä–∞–¥–æ—Å—Ç–Ω–µ–µ! üåû\n ‚ú® –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –¥—Ä—É–∂–∏—Ç—å —Å–æ –º–Ω–æ–π –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ "–î–∞–≤–∞–π –¥—Ä—É–∂–∏—Ç—å"\n –° —É–≤–∞–∂–µ–Ω–∏–µ–º, —Ç–≤–æ–π –¥—Ä—É–≥ –ë–∞–±–∞—á–µ–Ω–æ–∫! üêø'))

bot.on("text", (ctx) => {
    const message = ctx.message.text.toLowerCase();

    if (message === "–î–∞–≤–∞–π –¥—Ä—É–∂–∏—Ç—å") {

        ctx.reply("üêø –£—Ä–∞! –ú—ã —Å —Ç–æ–±–æ–π –¥—Ä—É–∑—å—è! –Ø —Ç–∞–∫ —Ä–∞–¥, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –¥—Ä—É–∂–∏—Ç—å! –Ø –æ–±–µ—â–∞—é –¥–µ–ª–∞—Ç—å —Ç–≤–æ–∏ —É—Ç—Ä–µ–Ω–Ω–∏–µ —á–∞—Å—ã —è—Ä—á–µ –∏ –≤–µ—Å–µ–ª–µ–µ. –ö–∞–∂–¥–æ–µ —É—Ç—Ä–æ –±—É–¥—É –ø—Ä–æ—Å—ã–ø–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ—Å–ª–∞—Ç—å —Ç–µ–±–µ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–∑–∏—Ç–∏–≤–∞! üåû –¢–∞–∫ —á—Ç–æ –≥–æ—Ç–æ–≤—å—Å—è, —è –≤—Å–µ–≥–¥–∞ —Ä—è–¥–æ–º, –≥–æ—Ç–æ–≤ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –¥–æ–±—Ä—ã–º–∏ —Å–ª–æ–≤–∞–º–∏ –∏ —Ä–∞–¥–æ—Å—Ç—å—é! ‚ú®");

        if (task) {
            task.stop();
        }
        task = cron.schedule("*/1 * * * *", () => {
            const currentMessage = messages[currentMessageIndex];

            const image = images[Math.floor(Math.random() * images.length)];

            bot.telegram.sendPhoto(ctx.chat.id, image).then(() => {
                bot.telegram.sendMessage(ctx.chat.id, currentMessage);;
            });

            currentMessageIndex = (currentMessageIndex + 1) % messages.length;
        });
        task.start();
    } else if (message === "—è —Å–æ—Å–∫—É—á–∏–ª—Å—è") {

        ctx.reply("üêø –£—Ä–∞! –¢—ã –≤–µ—Ä–Ω—É–ª—Å—è! –Ø —Ç–∞–∫ —Å–æ—Å–∫—É—á–∏–ª—Å—è –ø–æ —Ç–µ–±–µ! –¢–µ–ø–µ—Ä—å —è —Å–Ω–æ–≤–∞ –≥–æ—Ç–æ–≤ —Ä–∞–¥–æ–≤–∞—Ç—å —Ç–µ–±—è, –ø–æ–¥–Ω–∏–º–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏ –±—ã—Ç—å —Ä—è–¥–æ–º! –î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º –Ω–æ–≤—ã–π –¥–µ–Ω—å —Å —É–ª—ã–±–∫–æ–π! üåû");

        if (task) {
            task.stop();
        }
        task = cron.schedule("*/1 * * * *", () => {
            const currentMessage = messages[Math.floor(Math.random() * messages.length)];

            const image = images[Math.floor(Math.random() * images.length)];

            bot.telegram.sendPhoto(ctx.chat.id, image).then(() => {
                bot.telegram.sendMessage(ctx.chat.id, currentMessage);;
            });

        });
        task.start();

    } else if (message === "—Å—Ç–æ–ø") {
        if (task) {
            task.stop();
            task = null;

            const currentStopMessage = stopMsgs[currentStopIndex];

            bot.telegram.sendMessage(ctx.chat.id, currentStopMessage);;

            currentStopIndex = (currentStopIndex + 1) % stopMsgs.length;
        } else {
            ctx.reply("–Ø –∏ —Ç–∞–∫ –º–æ–ª—á–∞–ª... üòÖ");
        }
    } else {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –º–∞—Å—Å–∏–≤–∞ excuses
        const randomExcuse = excuses[Math.floor(Math.random() * excuses.length)];
        bot.telegram.sendMessage(ctx.chat.id, randomExcuse);
    }
});


bot.launch();